{"version":3,"sources":["Card.js","DeckOfCards.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","angle","Math","random","xPos","yPos","transform","style","this","className","src","image","alt","name","Component","DeckOfCards","state","deck","drawnCards","drawCard","bind","a","axios","get","response","setState","data","deck_id","result","console","log","success","Error","newCard","cards","id","code","value","suit","alert","map","card","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAmBeA,E,kDAfX,WAAYC,GAAQ,IAAD,sBACf,cAAMA,GACN,IAAIC,EAAwB,GAAhBC,KAAKC,SAAgB,GAC7BC,EAAuB,GAAhBF,KAAKC,SAAgB,GAC5BE,EAAuB,GAAhBH,KAAKC,SAAgB,GAJjB,OAKf,EAAKG,UAAL,oBAA8BF,EAA9B,eAAyCC,EAAzC,sBAA2DJ,EAA3D,QALe,E,0CAOnB,WAEI,OACI,qBAAKM,MAAO,CAAED,UAAWE,KAAKF,WAAaG,UAAU,OAAOC,IAAKF,KAAKR,MAAMW,MAAOC,IAAKJ,KAAKR,MAAMa,W,GAX5FC,a,iBC+DJC,G,wDAzDX,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTC,KAAM,KACNC,WAAY,IAEhB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAND,E,4FAQnB,4BAAAC,EAAA,sEACyBC,IAAMC,IAb1B,mDAYL,OACQC,EADR,OAGIhB,KAAKiB,SAAS,CACVR,KAAMO,EAASE,OAJvB,gD,mHASA,8BAAAL,EAAA,+EAE2BC,IAAMC,IAAN,8CAAiDf,KAAKQ,MAAMC,KAAKU,QAAjE,WAF3B,UAEYC,EAFZ,OAGQC,QAAQC,IAAIF,EAAOF,MACdE,EAAOF,KAAKK,QAJzB,sBAKkB,IAAIC,MAAM,sBAL5B,OAOYC,EAAUL,EAAOF,KAAKQ,MAAM,GAChC1B,KAAKiB,UAAS,SAAAT,GAAK,MAAK,CACpBE,WAAW,GAAD,mBAAMF,EAAME,YAAZ,CACV,CACIiB,GAAIF,EAAQG,KACZzB,MAAOsB,EAAQtB,MACfE,KAAK,GAAD,OAAKoB,EAAQI,MAAb,eAAyBJ,EAAQK,aAbrD,kDAmBQC,MAAM,EAAD,IAnBb,0D,0EAuBA,WACI,IAAML,EAAQ1B,KAAKQ,MAAME,WAAWsB,KAAI,SAAAC,GAAI,OACxC,cAAC,EAAD,CAAoB5B,KAAM4B,EAAK5B,KAAMF,MAAO8B,EAAK9B,OAAtC8B,EAAKN,OAEpB,OACI,sBAAK1B,UAAU,cAAf,UACI,oBAAIA,UAAU,aAAd,wCACA,oBAAIA,UAAU,sBAAd,yDACA,wBAAQA,UAAU,WAAWiC,QAASlC,KAAKW,SAA3C,8BACA,qBAAKV,UAAU,YAAf,SAA4ByB,W,GAlDlBpB,cCMX6B,G,kKATb,WACE,OACE,8BACE,cAAC,EAAD,U,GAJU7B,cCQH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.98ef8071.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Card.css';\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let angle = Math.random() * 90 - 45;\r\n        let xPos = Math.random() * 40 - 20;\r\n        let yPos = Math.random() * 40 - 20;\r\n        this.transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <img style={{ transform: this.transform }} className=\"Card\" src={this.props.image} alt={this.props.name} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from './Card';\r\nimport axios from 'axios';\r\nimport './DeckOfCards.css';\r\n\r\nconst url = `https://deckofcardsapi.com/api/deck/new/shuffle`;\r\n\r\n\r\nclass DeckOfCards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            deck: null,\r\n            drawnCards: []\r\n        };\r\n        this.drawCard = this.drawCard.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let response = await axios.get(url);\r\n        //console.log(response.data.deck_id);\r\n        this.setState({\r\n            deck: response.data\r\n        })\r\n\r\n    }\r\n\r\n    async drawCard() {\r\n        try {\r\n            let result = await axios.get(`https://deckofcardsapi.com/api/deck/${this.state.deck.deck_id}/draw/`);\r\n            console.log(result.data);\r\n            if (!result.data.success) {\r\n                throw new Error(\"No card remaining!\");\r\n            }\r\n            let newCard = result.data.cards[0];\r\n            this.setState(state => ({\r\n                drawnCards: [...state.drawnCards,\r\n                {\r\n                    id: newCard.code,\r\n                    image: newCard.image,\r\n                    name: `${newCard.value} of ${newCard.suit}`\r\n\r\n                }\r\n                ]\r\n            }))\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const cards = this.state.drawnCards.map(card => (\r\n            <Card key={card.id} name={card.name} image={card.image} />\r\n        ));\r\n        return (\r\n            <div className=\"DeckOfCards\">\r\n                <h1 className=\"Deck-title\"> ♦ CARD DEALER ♦</h1>\r\n                <h2 className=\"Deck-title subtitle\">♦ A little demo made with React ♦</h2>\r\n                <button className=\"Deck-btn\" onClick={this.drawCard}>DEAL ME A CARD! </button>\r\n                <div className=\"Deck-card\">{cards}</div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default DeckOfCards;","import React, { Component } from 'react';\nimport DeckOfCards from './DeckOfCards';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <DeckOfCards />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}